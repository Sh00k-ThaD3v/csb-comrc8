{"version":3,"sources":["Text.js","App.js","index.js"],"names":["Text","children","vAlign","hAlign","i","size","color","props","font","useLoader","THREE","config","useMemo","height","curveSegments","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","group","useRef","mesh","useUpdate","self","geometry","computeBoundingBox","boundingBox","getSize","position","x","y","useEffect","gsap","defaults","duration","ease","delay","yoyo","repeat","repeatDelay","to","current","rotation","Math","PI","ref","args","attach","metalness","roughness","sin","cos","Letter","count","radius","l","$ref","Magic","text","start","scale","split","map","key","Pavement","rotation-x","receiveShadow","transparent","opacity","Reflector","clipBias","textureWidth","textureHeight","App","colorManagement","camera","fov","intensity","fallback","Environment","preset","OrbitControls","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f2692547.chunk.js","sourcesContent":["import * as THREE from \"three\";\nimport React, { useRef, useEffect, useMemo } from \"react\";\nimport { useLoader, useUpdate } from \"react-three-fiber\";\nimport gsap from \"gsap\";\n\nexport default function Text({\n  children,\n  vAlign = \"center\",\n  hAlign = \"center\",\n  size = 1,\n  color = \"#000000\",\n  i,\n  ...props\n}) {\n  const font = useLoader(THREE.FontLoader, \"/bold.blob\");\n  const config = useMemo(\n    () => ({\n      font,\n      size: 10,\n      height: 2,\n      curveSegments: 30,\n      bevelEnabled: true,\n      bevelThickness: 2,\n      bevelSize: 1,\n      bevelOffset: 0.1,\n      bevelSegments: 30\n    }),\n    [font]\n  );\n  const group = useRef();\n  const mesh = useUpdate(\n    (self) => {\n      const size = new THREE.Vector3();\n      self.geometry.computeBoundingBox();\n      self.geometry.boundingBox.getSize(size);\n      self.position.x +=\n        hAlign === \"center\" ? -size.x / 2 : hAlign === \"right\" ? 0 : -size.x;\n      self.position.y +=\n        vAlign === \"center\" ? -size.y / 2 : vAlign === \"top\" ? 0 : -size.y;\n    },\n    [children]\n  );\n\n  useEffect(() => {\n    gsap.defaults({\n      duration: 1.4,\n      ease: \"power3.inOut\",\n      delay: 1.5 + i * 0.1,\n      yoyo: true,\n      repeat: -1,\n      repeatDelay: 1.6\n    });\n    gsap.to(mesh.current.rotation, {\n      x: Math.PI * 0.5\n    });\n    gsap.to(group.current.position, {\n      y: 1.8\n    });\n  });\n\n  return (\n    <>\n      <group {...props} ref={group}>\n        <mesh ref={mesh}>\n          <textBufferGeometry args={[children, config]} />\n          <meshStandardMaterial\n            attach=\"material\"\n            metalness={0.2}\n            roughness={0.3}\n            color=\"#f7b77e\"\n          />\n        </mesh>\n      </group>\n    </>\n  );\n}\n","import React, { Suspense, useEffect, useRef } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { OrbitControls, Environment, Plane, Reflector } from \"drei\";\nimport gsap from \"gsap\";\nimport Text from \"./Text\";\nimport \"./styles.css\";\n\nconst { PI, sin, cos } = Math;\n\nconst Letter = ({ i, count, radius, l }) => {\n  const $ref = useRef();\n\n  return (\n    <group ref={$ref} rotation={[0, 0, 0]}>\n      <Text\n        hAlign=\"center\"\n        position={[\n          radius * sin((i / count) * PI * 2),\n          -0.8,\n          radius * cos((i / count) * PI * 2)\n        ]}\n        rotation={[0, (i / count) * PI * 2, 0]}\n        i={i}\n        children={l}\n      />\n    </group>\n  );\n};\n\nconst Magic = ({ text, count, radius, start = 0, position }) => {\n  const $ref = useRef();\n  useEffect(() => {\n    gsap.to($ref.current.rotation, {\n      duration: 6,\n      y: PI * 1.3 + PI * 2,\n      repeat: -1,\n      ease: \"power3.inOut\"\n    });\n  });\n  return (\n    <group\n      ref={$ref}\n      position={position}\n      rotation={[0, PI * 1.3, 0]}\n      scale={[-1, 1, 1]}\n    >\n      {text.split(\"\").map((l, i) => (\n        <Letter key={`1${i}`} l={l} radius={radius} i={i} count={count} />\n      ))}\n    </group>\n  );\n};\n\nconst Pavement = () => {\n  return (\n    <>\n      <Plane\n        rotation-x={-PI * 0.5}\n        position={[0, -7.9, 0]}\n        args={[200, 200]}\n        receiveShadow\n      >\n        <meshBasicMaterial\n          color={\"#ffcda3\"}\n          attach=\"material\"\n          transparent={true}\n          opacity={0.4}\n        />\n      </Plane>\n      <Reflector\n        clipBias={0.1}\n        textureWidth={1024}\n        textureHeight={1024}\n        position={[0, -8, 0]}\n        rotation={[-PI * 0.5, 0, 0]}\n      >\n        <planeBufferGeometry args={[200, 200]} />\n      </Reflector>\n    </>\n  );\n};\n\nexport default function App() {\n  return (\n    <Canvas colorManagement camera={{ fov: 30, position: [0, 90, 180] }}>\n      <color attach=\"background\" args={[\"#ebcfba\"]} />\n      <directionalLight position={[-40, 20, 20]} color=\"#c59cf1\" />\n      <directionalLight\n        position={[10.5, 20, 10]}\n        intensity={1.5}\n        color=\"#e78f48\"\n      />\n      <ambientLight color=\"#8d69cb\" />\n      <Suspense fallback={null}>\n        <Pavement />\n        <Environment preset=\"night\" />\n        <Magic\n          text={\"PLAYGROUND\"}\n          start={Math.PI * 1.18}\n          count={11}\n          radius={25}\n        />\n      </Suspense>\n      <OrbitControls />\n    </Canvas>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}